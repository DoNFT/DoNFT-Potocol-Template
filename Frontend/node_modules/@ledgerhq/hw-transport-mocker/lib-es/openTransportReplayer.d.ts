/// <reference types="node" />
import Transport from "@ledgerhq/hw-transport";
import type { RecordStore } from "./RecordStore";
export declare class TransportReplayer extends Transport {
    recordStore: RecordStore;
    constructor(recordStore: RecordStore);
    static isSupported: () => Promise<boolean>;
    static list: () => Promise<null[]>;
    static listen: (o: any) => {
        unsubscribe: () => void;
    };
    static open: (recordStore: RecordStore) => Promise<TransportReplayer>;
    setScrambleKey(): void;
    close(): Promise<void>;
    exchange(apdu: Buffer): Promise<Buffer>;
}
/**
 * create a transport replayer with a record store.
 * @param recordStore
 */
declare const openTransportReplayer: (recordStore: RecordStore) => Promise<TransportReplayer>;
export default openTransportReplayer;
//# sourceMappingURL=openTransportReplayer.d.ts.map